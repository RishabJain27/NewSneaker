{"version":3,"sources":["shoe.module.css","Shoe.js","Home.js","Login.js","Register.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Shoe","names","image_url","site","category","className","style","shoe","onClick","console","log","window","open","click","name","image","src","alt","width","height","Home","useState","shoes","setShoes","allValues","setValues","history","useHistory","useEffect","shoesDB","a","fetch","response","json","data","nikeShoes","adidasShoes","underarmourShoes","Navbar","collapseOnSelect","expand","variant","Toggle","aria-controls","Collapse","id","Nav","NavDropdown","title","onSelect","e","Item","eventKey","newShoe","filter","gender","map","allValue","push","Button","key","Login","emailAddress","setEmail","pass","setPass","submitButton","preventDefault","url","concat","ok","pathname","user","alert","message","type","placeholder","onChange","target","value","href","Register","firstName","setFirst","lastName","setLast","requestOptions","method","headers","body","JSON","stringify","first","last","email","password","App","exact","path","component","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.ccaa2fb6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"shoe\":\"shoe_shoe__2uOBt\",\"img\":\"shoe_img__1BNRS\",\"name\":\"shoe_name__Ul3iJ\"};","import React from 'react';\nimport style from './shoe.module.css';\n\nconst Shoe = ({names, image_url, site, category}) => {\n\n    function click(site) {\n        console.log(site.site);\n        window.open(site.site);\n    }\n\n    return(\n        <div className={style.shoe} onClick={() => click({site})}>\n            <p className={style.name}> <b> {names} </b> </p>\n            <img className={style.image} src={image_url} alt=\"\" width=\"200\" height=\"200\"/>\n            <p className={style.name}> <b> {category} </b> </p>\n        </div>\n    );\n}\n\nexport default Shoe;","import React, { useEffect, useState } from 'react';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport NavDropdown from 'react-bootstrap/NavDropdown';\r\nimport { Button} from 'react-bootstrap';\r\nimport { useHistory } from 'react-router-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './Home.css';\r\nimport Shoe from \"./Shoe\"\r\n\r\n\r\nconst Home = () => {\r\n\r\n  const [shoes, setShoes] = useState([]);\r\n  const [allValues, setValues] = useState([]);\r\n  const history = useHistory();\r\n  \r\n\r\n  useEffect( () => {\r\n    shoesDB();\r\n  },[]);\r\n\r\n  const handleSelectBrand=(e)=>{\r\n    if(e === \"Adidas\"){\r\n      adidasShoes();\r\n    }\r\n    if(e === \"Nike\"){\r\n      nikeShoes();\r\n    }\r\n    if(e === \"UnderArmour\"){\r\n      underarmourShoes();\r\n    }\r\n\r\n  }\r\n\r\n  const handleLoginRedirect = () =>{\r\n    history.push(\"/Login\");\r\n\r\n  }\r\n\r\n  const handleSelectGender=(e)=>{\r\n    var newShoe = [];\r\n   \r\n    if(e === \"Kid\"){\r\n      allValues.filter(allValues => allValues.gender === e ).map(allValue => (\r\n        newShoe.push(allValue) \r\n      ));\r\n    }\r\n    else{\r\n      allValues.filter(allValues => allValues.gender === e || allValues.gender === \"Unisex\").map(allValue => (\r\n        newShoe.push(allValue) \r\n      ));\r\n    }\r\n    setShoes(newShoe);\r\n  }\r\n\r\n  const shoesDB = async () => {\r\n    const response = await fetch(`https://sneakers-api.herokuapp.com/shoes`);\r\n    const data = await response.json();\r\n    setShoes(data);\r\n    setValues(data);\r\n  }\r\n\r\n  const nikeShoes = async () => {\r\n    const response = await fetch(`https://sneakers-api.herokuapp.com/nikeShoes`);\r\n    const data = await response.json();\r\n    setShoes(data);\r\n    setValues(data);\r\n    //console.log(data);\r\n  }\r\n\r\n  const adidasShoes = async () => {\r\n    const response = await fetch(`https://sneakers-api.herokuapp.com/adidasShoes`);\r\n    const data = await response.json();\r\n    setShoes(data);\r\n    setValues(data);\r\n    //console.log(data);\r\n  }\r\n\r\n  const underarmourShoes = async () => {\r\n    const response = await fetch(`https://sneakers-api.herokuapp.com/underarmourShoes`);\r\n    const data = await response.json();\r\n    setShoes(data);\r\n    setValues(data);\r\n    //console.log(data);\r\n  } \r\n\r\n  return (\r\n    <div className=\"Home\">\r\n      <h1 className=\"h1\">Newly Released Sneakers</h1>\r\n      <Navbar className=\"navbar\" collapseOnSelect expand=\"lg\" variant=\"light\">\r\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n        <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n          <Nav className=\"mr-auto\">\r\n            <NavDropdown \r\n              title=\"Brand\" \r\n              id=\"collasible-nav-dropdown\"\r\n              onSelect={handleSelectBrand}>\r\n              <NavDropdown.Item eventKey=\"Nike\">Nike</NavDropdown.Item>\r\n              <NavDropdown.Item eventKey=\"Adidas\">Adidas</NavDropdown.Item>\r\n              <NavDropdown.Item eventKey=\"UnderArmour\">Under Armour</NavDropdown.Item>\r\n            </NavDropdown>\r\n\r\n            <NavDropdown \r\n              title=\"Gender\" \r\n              id=\"collasible-nav-dropdown\"\r\n              onSelect={handleSelectGender}>\r\n              <NavDropdown.Item eventKey=\"Male\">Male</NavDropdown.Item>\r\n              <NavDropdown.Item eventKey=\"Female\">Female</NavDropdown.Item>\r\n              <NavDropdown.Item eventKey=\"Unisex\">Unisex</NavDropdown.Item>\r\n              <NavDropdown.Item eventKey=\"Kid\">Kids</NavDropdown.Item>\r\n            </NavDropdown>\r\n          </Nav>\r\n          <Nav>\r\n            <Button variant=\"outline-primary\" onClick={handleLoginRedirect}>Login</Button>\r\n          </Nav>\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n      <br></br>\r\n      <div className=\"shoes\">             \r\n        {shoes.map(shoe => (\r\n          <Shoe\r\n            key = {shoe.image_url}\r\n            names={shoe.name}\r\n            image_url = {shoe.image_url} \r\n            site = {shoe.site}\r\n            category = {shoe.category}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n};\r\n\r\nexport default Home;","import React, {useState} from \"react\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nimport './Login.css';\r\n\r\nconst Login = () => {\r\n\r\n    const [emailAddress, setEmail] = useState('');\r\n    const [pass, setPass] = useState('');\r\n    const history = useHistory();\r\n\r\n    const handleSelectEmail=(e)=>{\r\n        //console.log(e.target.value);\r\n        setEmail(e.target.value);\r\n    }\r\n\r\n    const handleSelectPass=(e)=>{\r\n        //console.log(e.target.value);\r\n        setPass(e.target.value);\r\n    }\r\n\r\n    const  submitButton=async(e)=>{\r\n        e.preventDefault();\r\n        var url = \"https://sneakers-api.herokuapp.com/user/\";\r\n        var passUrl = \"/pass/\";\r\n        url = url.concat(emailAddress,passUrl);\r\n        url = url.concat(pass);\r\n        console.log(url);\r\n\r\n        const response = await fetch(url);\r\n        const data = await response.json();\r\n        console.log(data);\r\n        \r\n        if(response.ok){\r\n            //history.push(\"/\");\r\n            history.push({\r\n                pathname: '/',\r\n                user: true,\r\n              });\r\n        }\r\n        else{\r\n            alert(data.message);\r\n        }\r\n        \r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"Login\">\r\n            <div className=\"Login-small\">\r\n                <form>\r\n                    <h3>Sign In</h3>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label>Email address</label>\r\n                        <input type=\"email\" className=\"form-control\" placeholder=\"Enter email\" onChange={handleSelectEmail}/>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label>Password</label>\r\n                        <input type=\"password\" className=\"form-control\" placeholder=\"Enter password\" onChange={handleSelectPass}/>\r\n                    </div>\r\n\r\n                    <button type=\"submit\" className=\"btn btn-primary btn-block\" onClick={submitButton}>Submit</button>\r\n                    <p className=\"forgot-password text-right\">\r\n                        Don't have an account <a href=\"Register\">Sign Up?</a>\r\n                    </p>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default Login;\r\n","import React, {useState} from \"react\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport './Login.css';\r\n\r\nconst Register = () => {\r\n\r\n    const [firstName, setFirst] = useState('');\r\n    const [lastName, setLast] = useState('');\r\n    const [emailAddress, setEmail] = useState('');\r\n    const [pass, setPass] = useState('');\r\n    const history = useHistory();\r\n\r\n    const handleSelectFirst=(e)=>{\r\n        setFirst(e.target.value);\r\n    }\r\n\r\n    const handleSelectLast=(e)=>{\r\n        setLast(e.target.value);\r\n    }\r\n\r\n    const handleSelectEmail=(e)=>{\r\n        setEmail(e.target.value);\r\n    }\r\n\r\n    const handleSelectPass=(e)=>{\r\n        setPass(e.target.value);\r\n    }\r\n    \r\n    const  submitButton=async(e)=>{\r\n        e.preventDefault();\r\n\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(\r\n                { first: firstName,\r\n                last: lastName,\r\n                email: emailAddress,\r\n                password: pass\r\n            })\r\n        };\r\n        const response = await fetch(`https://sneakers-api.herokuapp.com/user`, requestOptions);\r\n        const data = await response.json();\r\n        if(response.ok){\r\n            history.push(\"/\");\r\n        }\r\n        alert(data.message);\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"Login\">\r\n            <div className=\"Login-small\">\r\n                <form>\r\n                    <h3>Sign Up</h3>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label>First name</label>\r\n                        <input type=\"text\" className=\"form-control\" placeholder=\"First name\" onChange={handleSelectFirst}/>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label>Last name</label>\r\n                        <input type=\"text\" className=\"form-control\" placeholder=\"Last name\" onChange={handleSelectLast}/>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label>Email address</label>\r\n                        <input type=\"email\" className=\"form-control\" placeholder=\"Enter email\" onChange={handleSelectEmail}/>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label>Password</label>\r\n                        <input type=\"password\" className=\"form-control\" placeholder=\"Enter password\" onChange={ handleSelectPass}/>\r\n                    </div>\r\n\r\n                    <button type=\"submit\" className=\"btn btn-primary btn-block\" onClick={submitButton}>Sign Up</button>\r\n                    <p className=\"forgot-password text-right\">\r\n                        Already registered <a href=\"Login\">sign in?</a>\r\n                    </p>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Register;","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Home from \"./Home\";\nimport Login from \"./Login\";\nimport {Route} from \"react-router-dom\";\nimport Register from './Register';\nimport './App.css';\n\n\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <Route exact path=\"/\" component={Home}/>\n      <Route exact path=\"/Login\" component={Login}/>\n      <Route exact path=\"/Register\" component={Register}/>\n\n    </div>\n  );\n\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from 'react-router-dom';\n\n\nReactDOM.render(\n  <React.StrictMode> \n    <BrowserRouter>\n        <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}